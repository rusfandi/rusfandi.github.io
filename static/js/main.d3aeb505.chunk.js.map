{"version":3,"sources":["posts.js","composedChart.js","effectOpacity.js","radar.js","Dashboard.js","myAccount.js","schedule.js","transaction.js","checkTransaction.js","listPrice.js","feature.js","App.js","serviceWorker.js","index.js"],"names":["PostFilter","props","react_default","a","createElement","Filter","TextInput","label","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostList","List","Object","assign","filters","posts_PostFilter","Responsive","small","SimpleList","primaryText","record","id","secondaryText","handphone","tertiaryText","alamat","medium","Datagrid","TextField","ReferenceField","EditButton","PostTitle","_ref","concat","title","PostEdit","Edit","posts_PostTitle","SimpleForm","DisabledInput","LongTextInput","data","name","uv","pv","amt","SameDataComposedChart","ResponsiveContainer","width","height","ComposedChart","margin","top","right","bottom","left","CartesianGrid","stroke","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","barSize","fill","Line","type","SimpleAreaChart","LineChart","syncId","strokeDasharray","subject","A","B","fullMark","TwoLevelPieChart","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","fillOpacity","withStyles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","classes","className","Grid_default","container","item","xs","Card_default","Title","CardHeader_default","style","md","Paper_default","composedChart","alignItems","effectOpacity","radar","myAccountList","myAccountCreate","Create","scheduleList","transactionList","checkTransactionList","listPriceList","featureList","dataProvider","jsonServerProvider","App","Admin","dashboard","Dashboard","Resource","list","edit","icon","PostIcon","create","face","options","event","payment","redeem","add_shopping_cart","menu","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3aeb505.chunk.js","sourcesContent":["// in src/posts.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  ReferenceField,\r\n  TextField,\r\n  EditButton,\r\n  DisabledInput,\r\n  LongTextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  Filter,\r\n  SimpleList,\r\n  Responsive\r\n} from \"react-admin\";\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"nama\" source=\"nama\" reference=\"myAccount\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const PostList = props => (\r\n  <List {...props} filters={<PostFilter />}>\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.id}\r\n          secondaryText={record => record.handphone}\r\n          tertiaryText={record => record.alamat}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <ReferenceField\r\n            label=\"Nama\"\r\n            source=\"myAccountId\"\r\n            reference=\"myAccount\"\r\n          >\r\n            <TextField source=\"nama\" />\r\n          </ReferenceField>\r\n          {/* <TextField source=\"nama\" /> */}\r\n          <TextField source=\"handphone\" />\r\n          <TextField source=\"alamat\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\n\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <ReferenceInput label=\"nama\" source=\"nama\" reference=\"myAccount\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <DisabledInput source=\"nama\" />\r\n      <TextInput source=\"handphone\" />\r\n      <LongTextInput source=\"alamat\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Bar,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Januari\", uv: 590, pv: 800, amt: 1400 },\r\n  { name: \"Februari\", uv: 868, pv: 967, amt: 1506 },\r\n  { name: \"Maret\", uv: 1397, pv: 1098, amt: 989 },\r\n  { name: \"April\", uv: 1480, pv: 1200, amt: 1228 },\r\n  { name: \"Mei\", uv: 1520, pv: 1108, amt: 1100 },\r\n  { name: \"Juni\", uv: 1400, pv: 680, amt: 1700 }\r\n];\r\n\r\nfunction SameDataComposedChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={150}>\r\n      <ComposedChart\r\n        data={data}\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n      >\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"uv\" barSize={20} fill=\"#413ea0\" />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\nexport default SameDataComposedChart;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\nconst data = [\r\n  { name: \"Senin\", uv: 5, pv: 9 },\r\n  { name: \"Selasa\", uv: 4, pv: 7 },\r\n  { name: \"Rabu\", uv: 3, pv: 6 },\r\n  { name: \"Kamis\", uv: 2, pv: 5 },\r\n  { name: \"Jum'at\", uv: 3, pv: 3 },\r\n  { name: \"Sabtu\", uv: 4, pv: 2 },\r\n  { name: \"Minggu\", uv: 5, pv: 1 }\r\n];\r\nfunction SimpleAreaChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={150}>\r\n      <LineChart\r\n        data={data}\r\n        syncId=\"anyId\"\r\n        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\nexport default SimpleAreaChart;\r\n","import React from \"react\";\r\nimport {\r\n  Radar,\r\n  RadarChart,\r\n  PolarGrid,\r\n  ResponsiveContainer,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { subject: \"Aki\", A: 120, B: 110, fullMark: 150 },\r\n  { subject: \"Botol Oli\", A: 98, B: 130, fullMark: 150 },\r\n  { subject: \"Kaleng\", A: 86, B: 130, fullMark: 150 },\r\n  { subject: \"Botol Kaca\", A: 99, B: 100, fullMark: 150 },\r\n  { subject: \"Botol Plastik\", A: 85, B: 90, fullMark: 150 },\r\n  { subject: \"Plastik\", A: 65, B: 85, fullMark: 150 }\r\n];\r\n\r\nfunction TwoLevelPieChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={250}>\r\n      <RadarChart cx={250} cy={130} outerRadius={100} data={data}>\r\n        <PolarGrid />\r\n        <PolarAngleAxis dataKey=\"subject\" />\r\n        <PolarRadiusAxis />\r\n        <Radar\r\n          name=\"Mike\"\r\n          dataKey=\"A\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n          fillOpacity={0.6}\r\n        />\r\n      </RadarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default TwoLevelPieChart;\r\n","// in src/Dashboard.js\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Title } from \"react-admin\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SameDataComposedChart from \"./composedChart\";\r\nimport SimpleAreaChart from \"./effectOpacity\";\r\nimport TwoLevelPieChart from \"./radar\";\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Title title=\"Dashboard\" />\r\n            <CardHeader\r\n              style={{ textAlign: \"center\" }}\r\n              title=\"Selamat Datang Di Tampah Nasabah\"\r\n            />\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Data Keseluruhan Sampah (per-bulan, /kg)\r\n            <SameDataComposedChart />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} alignItems={\"center\"}>\r\n          <Paper className={classes.paper}>\r\n            Data Bank Sampah Keseluruhan (per-minggu, /kg)\r\n            <SimpleAreaChart />\r\n          </Paper>\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Data Sampah Keseluruhan (per-bulan, /ton)\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>Data Fluktuasi Bank Sampah</Paper>\r\n        </Grid> */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            Data Sampah Nasabah\r\n            <TwoLevelPieChart />\r\n          </Paper>\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Data Akumulasi Sampah Regional\r\n          </Paper>\r\n        </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n          <Paper className={classes.paper}>Rating Sampah Regional</Paper>\r\n        </Grid> */}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","// in src/myAccount.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Create,\r\n  SimpleForm,\r\n  TextInput\r\n} from \"react-admin\";\r\n\r\nexport const myAccountList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"nama\" />\r\n      <TextField source=\"handphone\" />\r\n      <TextField source=\"alamat\" />\r\n      <TextField source=\"rekening\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\nexport const myAccountCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"nama\" />\r\n      <TextInput source=\"handphone\" />\r\n      <TextInput source=\"alamat\" />\r\n      <TextInput source=\"rekening\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","// in src/schedule.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, TextField } from \"react-admin\";\r\n\r\nexport const scheduleList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"jadwal\" />\r\n      <TextField source=\"deskripsi\" />\r\n      <TextField source=\"tanggal\" />\r\n      <TextField source=\"tempat\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/transaction.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField\r\n  // Create,\r\n  // SimpleForm,\r\n  // TextInput\r\n} from \"react-admin\";\r\n\r\nexport const transactionList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"Jemput\" />\r\n      <TextField source=\"ProdukList\" />\r\n      <TextField source=\"TambahKeranjang\" />\r\n      <TextField source=\"Konfirmasi\" />\r\n      <TextField source=\"DetailTransaksi\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n// export const transactionCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <TextInput source=\"id\" />\r\n//       <TextInput source=\"Jemput\" />\r\n//       <TextInput source=\"ProdukList\" />\r\n//       <TextInput source=\"TambahKeranjang\" />\r\n//       <TextInput source=\"Konfirmasi\" />\r\n//       <TextInput source=\"DetailTransaksi\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","// in src/checkTransaction.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, TextField } from \"react-admin\";\r\n\r\nexport const checkTransactionList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"status\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","// in src/listPrice.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField\r\n  //   Create,\r\n  //   SimpleForm,\r\n  //   TextInput\r\n} from \"react-admin\";\r\n\r\nexport const listPriceList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"produk\" />\r\n      <TextField source=\"harga\" />\r\n      <TextField source=\"satuan\" />\r\n      <TextField source=\"namaBankSampah\" />\r\n      <TextField source=\"updateTerakhir\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n// export const listPriceCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <TextInput source=\"id\" />\r\n//       <TextInput source=\"produk\" />\r\n//       <TextInput source=\"harga\" />\r\n//       <TextInput source=\"satuan\" />\r\n//       <TextInput source=\"namaBankSampah\" />\r\n//       <TextInput source=\"updateTerakhir\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","// in src/feature.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField\r\n  //   TextInput,\r\n  //   Create,\r\n  //   SimpleForm\r\n} from \"react-admin\";\r\n\r\nexport const featureList = props => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"saldo\" />\r\n      <TextField source=\"topup\" />\r\n      <TextField source=\"t_bayar\" />\r\n      <TextField source=\"t_beli\" />\r\n      <TextField source=\"t_merchant\" />\r\n      <TextField source=\"t_warung\" />\r\n      <TextField source=\"t_jajan\" />\r\n      <TextField source=\"t_chat\" />\r\n      <TextField source=\"t_belajar\" />\r\n      <TextField source=\"t_games\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n// export const featureCreate = props => (\r\n//   <Create {...props}>\r\n//     <SimpleForm>\r\n//       <TextInput source=\"id\" />\r\n//       <TextInput source=\"saldo\" />\r\n//       <TextInput source=\"topup\" />\r\n//       <TextInput source=\"t_bayar\" />\r\n//       <TextInput source=\"t_beli\" />\r\n//       <TextInput source=\"t_merchant\" />\r\n//       <TextInput source=\"t_warung\" />\r\n//       <TextInput source=\"t_jajan\" />\r\n//       <TextInput source=\"t_chat\" />\r\n//       <TextInput source=\"t_belajar\" />\r\n//       <TextInput source=\"t_games\" />\r\n//     </SimpleForm>\r\n//   </Create>\r\n// );\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { PostList, PostEdit } from \"./posts\";\nimport PostIcon from \"@material-ui/icons/Book\";\nimport Dashboard from \"./Dashboard\";\n// import authProvider from \"./authProvider\";\nimport { myAccountList, myAccountCreate } from \"./myAccount\";\nimport face from \"@material-ui/icons/Face\";\nimport { scheduleList } from \"./schedule\";\nimport event from \"@material-ui/icons/Event\";\nimport { transactionList } from \"./transaction\";\nimport payment from \"@material-ui/icons/Payment\";\nimport { checkTransactionList } from \"./checkTransaction\";\nimport redeem from \"@material-ui/icons/Redeem\";\nimport { listPriceList } from \"./listPrice\";\nimport add_shopping_cart from \"@material-ui/icons/AddShoppingCart\";\nimport { featureList } from \"./feature\";\nimport menu from \"@material-ui/icons/Menu\";\n\nconst dataProvider = jsonServerProvider(\n  \"https://my-json-server.typicode.com/rusfandi/jsonserver\"\n  //\"http://localhost:3000\"\n);\n\nconst App = () => (\n  <Admin\n    dashboard={Dashboard}\n    // authProvider={authProvider}\n    dataProvider={dataProvider}\n  >\n    <Resource name=\"posts\" list={PostList} edit={PostEdit} icon={PostIcon} />\n    <Resource\n      name=\"myAccount\"\n      list={myAccountList}\n      create={myAccountCreate}\n      icon={face}\n      options={{ label: \"Akun\" }}\n    />\n    <Resource\n      name=\"schedule\"\n      list={scheduleList}\n      icon={event}\n      options={{ label: \"Jadwal\" }}\n    />\n    <Resource\n      name=\"transaction\"\n      list={transactionList}\n      // create={transactionCreate}\n      icon={payment}\n      options={{ label: \"Transaksi\" }}\n    />\n    <Resource\n      name=\"checkTransaction\"\n      list={checkTransactionList}\n      icon={redeem}\n      options={{ label: \"CekTransaksi\" }}\n    />\n    <Resource\n      name=\"listPrice\"\n      list={listPriceList}\n      // create={listPriceCreate}\n      icon={add_shopping_cart}\n      options={{ label: \"Harga\" }}\n    />\n    <Resource\n      name=\"feature\"\n      list={featureList}\n      // create={featureCreate}\n      icon={menu}\n      options={{ label: \"Fitur\" }}\n    />\n  </Admin>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}